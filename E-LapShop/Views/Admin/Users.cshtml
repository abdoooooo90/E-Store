@using DAL.Models
@model IEnumerable<ApplicationUser>
@{
    ViewData["Title"] = "إدارة المستخدمين";
    Layout = "~/Views/Admin/_AdminLayout.cshtml";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2><i class="fas fa-users me-2"></i>إدارة المستخدمين</h2>
    <div class="btn-group">
        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addUserModal">
            <i class="fas fa-user-plus me-2"></i>إضافة مستخدم جديد
        </button>
        <button class="btn btn-outline-success" onclick="exportUsers()">
            <i class="fas fa-download me-2"></i>تصدير البيانات
        </button>
    </div>
</div>

<!-- فلاتر البحث -->
<div class="page-header mb-4">
    <div class="row">
        <div class="col-md-4">
            <input type="text" class="form-control" placeholder="البحث في المستخدمين..." id="searchInput">
        </div>
        <div class="col-md-3">
            <select class="form-select" id="roleFilter">
                <option value="">جميع الأدوار</option>
                <option value="admin">مدير</option>
                <option value="user">مستخدم عادي</option>
            </select>
        </div>
        <div class="col-md-3">
            <select class="form-select" id="statusFilter">
                <option value="">جميع الحالات</option>
                <option value="active">نشط</option>
                <option value="locked">محظور</option>
            </select>
        </div>
        <div class="col-md-2">
            <button class="btn btn-outline-secondary w-100" onclick="clearFilters()">
                <i class="fas fa-times me-2"></i>مسح
            </button>
        </div>
    </div>
</div>

<!-- جدول المستخدمين -->
<div class="page-header">
    <div class="table-responsive">
        <table class="table table-hover">
            <thead class="table-dark">
                <tr>
                    <th>الصورة الشخصية</th>
                    <th>الاسم الكامل</th>
                    <th>البريد الإلكتروني</th>
                    <th>رقم الهاتف</th>
                    <th>الدور</th>
                    <th>الحالة</th>
                    <th>تاريخ التسجيل</th>
                    <th>آخر دخول</th>
                    <th>الإجراءات</th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null && Model.Any())
                {
                    @foreach (var user in Model)
                    {
                        <tr>
                            <td>
                                {
                                    <div class="bg-primary text-white rounded-circle d-flex align-items-center justify-content-center" style="width: 40px; height: 40px;">
                                        <i class="fas fa-user"></i>
                                    </div>
                                }
                            </td>
                            <td>
                                <strong>@user.FullName</strong>
                                @if (!string.IsNullOrEmpty(user.UserName))
                                {
                                    <br><small class="text-muted">@@user.UserName</small>
                                }
                            </td>
                            <td>
                                <a href="mailto:@user.Email" class="text-decoration-none">@user.Email</a>
                                @if (user.EmailConfirmed)
                                {
                                    <i class="fas fa-check-circle text-success ms-1" title="البريد مؤكد"></i>
                                }
                                else
                                {
                                    <i class="fas fa-exclamation-circle text-warning ms-1" title="البريد غير مؤكد"></i>
                                }
                            </td>
                            <td>
                                @if (!string.IsNullOrEmpty(user.PhoneNumber))
                                {
                                    <span>@user.PhoneNumber</span>
                                    @if (user.PhoneNumberConfirmed)
                                    {
                                        <i class="fas fa-check-circle text-success ms-1" title="الهاتف مؤكد"></i>
                                    }
                                }
                                else
                                {
                                    <span class="text-muted">غير محدد</span>
                                }
                            </td>
                            <td>
                                <span class="badge bg-info" id="userRole_@user.Id">مستخدم عادي</span>
                            </td>
                            <td>
                                @if (user.LockoutEnd.HasValue && user.LockoutEnd > DateTimeOffset.Now)
                                {
                                    <span class="badge bg-danger">محظور</span>
                                }
                                else
                                {
                                    <span class="badge bg-success">نشط</span>
                                }
                            </td>
                            <td>
                                <small class="text-muted">حديث</small>
                            </td>
                            <td>
                                <small class="text-muted">غير محدد</small>
                            </td>
                            <td>
                                <div class="btn-group" role="group">
                                    <button type="button" class="btn btn-sm btn-outline-info" 
                                            onclick="viewUserDetails('@user.Id')" title="عرض التفاصيل">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                    <button type="button" class="btn btn-sm btn-outline-warning" 
                                            onclick="editUser('@user.Id', '@user.FullName', '@user.Email', '@user.PhoneNumber')" title="تعديل">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <div class="btn-group" role="group">
                                        <button type="button" class="btn btn-sm btn-outline-secondary dropdown-toggle" 
                                                data-bs-toggle="dropdown" title="المزيد">
                                            <i class="fas fa-ellipsis-v"></i>
                                        </button>
                                        <ul class="dropdown-menu">
                                            <li><a class="dropdown-item" href="#" onclick="changeUserRole('@user.Id')">
                                                <i class="fas fa-user-tag me-2"></i>تغيير الدور</a></li>
                                            <li><a class="dropdown-item" href="#" onclick="resetPassword('@user.Id')">
                                                <i class="fas fa-key me-2"></i>إعادة تعيين كلمة المرور</a></li>
                                            <li><hr class="dropdown-divider"></li>
                                            @if (user.LockoutEnd.HasValue && user.LockoutEnd > DateTimeOffset.Now)
                                            {
                                                <li><a class="dropdown-item text-success" href="#" onclick="unlockUser('@user.Id')">
                                                    <i class="fas fa-unlock me-2"></i>إلغاء الحظر</a></li>
                                            }
                                            else
                                            {
                                                <li><a class="dropdown-item text-warning" href="#" onclick="lockUser('@user.Id')">
                                                    <i class="fas fa-lock me-2"></i>حظر المستخدم</a></li>
                                            }
                                            <li><a class="dropdown-item text-danger" href="#" onclick="deleteUser('@user.Id', '@user.FullName')">
                                                <i class="fas fa-trash me-2"></i>حذف المستخدم</a></li>
                                        </ul>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="9" class="text-center py-4">
                            <i class="fas fa-users fa-3x text-muted mb-3"></i>
                            <p class="text-muted">لا يوجد مستخدمون حالياً</p>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<!-- إحصائيات المستخدمين -->
<div class="row mt-4">
    <div class="col-md-3">
        <div class="stats-card text-center">
            <h5 class="text-primary">@(Model?.Count() ?? 0)</h5>
            <small class="text-muted">إجمالي المستخدمين</small>
        </div>
    </div>
    <div class="col-md-3">
        <div class="stats-card text-center">
            <h5 class="text-success">@(Model?.Where(u => !u.LockoutEnd.HasValue || u.LockoutEnd <= DateTimeOffset.Now).Count() ?? 0)</h5>
            <small class="text-muted">مستخدمون نشطون</small>
        </div>
    </div>
    <div class="col-md-3">
        <div class="stats-card text-center">
            <h5 class="text-warning">@(Model?.Where(u => u.LockoutEnd.HasValue && u.LockoutEnd > DateTimeOffset.Now).Count() ?? 0)</h5>
            <small class="text-muted">مستخدمون محظورون</small>
        </div>
    </div>
    <div class="col-md-3">
        <div class="stats-card text-center">
            <h5 class="text-info">@(Model?.Where(u => u.EmailConfirmed).Count() ?? 0)</h5>
            <small class="text-muted">بريد مؤكد</small>
        </div>
    </div>
</div>

<!-- Modal إضافة مستخدم جديد -->
<div class="modal fade" id="addUserModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">إضافة مستخدم جديد</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="addUserForm">
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="userFullName" class="form-label">الاسم الكامل</label>
                        <input type="text" class="form-control" id="userFullName" required>
                    </div>
                    <div class="mb-3">
                        <label for="userEmail" class="form-label">البريد الإلكتروني</label>
                        <input type="email" class="form-control" id="userEmail" required>
                    </div>
                    <div class="mb-3">
                        <label for="userPhone" class="form-label">رقم الهاتف</label>
                        <input type="tel" class="form-control" id="userPhone">
                    </div>
                    <div class="mb-3">
                        <label for="userPassword" class="form-label">كلمة المرور</label>
                        <input type="password" class="form-control" id="userPassword" required>
                    </div>
                    <div class="mb-3">
                        <label for="userRole" class="form-label">الدور</label>
                        <select class="form-select" id="userRole">
                            <option value="User">مستخدم عادي</option>
                            <option value="Admin">مدير</option>
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">إلغاء</button>
                    <button type="submit" class="btn btn-primary">إضافة المستخدم</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal تعديل مستخدم -->
<div class="modal fade" id="editUserModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">تعديل المستخدم</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="editUserForm">
                <input type="hidden" id="editUserId">
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="editUserFullName" class="form-label">الاسم الكامل</label>
                        <input type="text" class="form-control" id="editUserFullName" required>
                    </div>
                    <div class="mb-3">
                        <label for="editUserEmail" class="form-label">البريد الإلكتروني</label>
                        <input type="email" class="form-control" id="editUserEmail" required>
                    </div>
                    <div class="mb-3">
                        <label for="editUserPhone" class="form-label">رقم الهاتف</label>
                        <input type="tel" class="form-control" id="editUserPhone">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">إلغاء</button>
                    <button type="submit" class="btn btn-warning">حفظ التعديلات</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal تفاصيل المستخدم -->
<div class="modal fade" id="userDetailsModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">تفاصيل المستخدم</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="userDetailsContent">
                <!-- سيتم تحميل التفاصيل هنا -->
            </div>
        </div>
    </div>
</div>

@section Scripts {
<script>
    // البحث والفلترة
    document.getElementById('searchInput').addEventListener('keyup', filterUsers);
    document.getElementById('roleFilter').addEventListener('change', filterUsers);
    document.getElementById('statusFilter').addEventListener('change', filterUsers);

    function filterUsers() {
        const searchTerm = document.getElementById('searchInput').value.toLowerCase();
        const roleFilter = document.getElementById('roleFilter').value.toLowerCase();
        const statusFilter = document.getElementById('statusFilter').value.toLowerCase();
        
        const rows = document.querySelectorAll('tbody tr');
        
        rows.forEach(row => {
            if (row.cells.length < 9) return;
            
            const userName = row.cells[1]?.textContent.toLowerCase() || '';
            const userEmail = row.cells[2]?.textContent.toLowerCase() || '';
            const userRole = row.cells[4]?.textContent.toLowerCase() || '';
            const userStatus = row.cells[5]?.textContent.toLowerCase() || '';
            
            const matchesSearch = userName.includes(searchTerm) || userEmail.includes(searchTerm);
            const matchesRole = !roleFilter || userRole.includes(roleFilter);
            const matchesStatus = !statusFilter || 
                (statusFilter === 'active' && userStatus.includes('نشط')) ||
                (statusFilter === 'locked' && userStatus.includes('محظور'));
            
            if (matchesSearch && matchesRole && matchesStatus) {
                row.style.display = '';
            } else {
                row.style.display = 'none';
            }
        });
    }

    function clearFilters() {
        document.getElementById('searchInput').value = '';
        document.getElementById('roleFilter').value = '';
        document.getElementById('statusFilter').value = '';
        filterUsers();
    }

    // إضافة مستخدم جديد
    document.getElementById('addUserForm').addEventListener('submit', function(e) {
        e.preventDefault();
        
        const userData = {
            fullName: document.getElementById('userFullName').value,
            email: document.getElementById('userEmail').value,
            phoneNumber: document.getElementById('userPhone').value,
            password: document.getElementById('userPassword').value,
            role: document.getElementById('userRole').value
        };
        
        fetch('/Admin/CreateUser', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(userData)
        })
        .then(response => {
            if (response.ok) {
                location.reload();
            } else {
                alert('حدث خطأ أثناء إضافة المستخدم');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('حدث خطأ أثناء إضافة المستخدم');
        });
    });

    // تعديل مستخدم
    function editUser(id, fullName, email, phone) {
        document.getElementById('editUserId').value = id;
        document.getElementById('editUserFullName').value = fullName;
        document.getElementById('editUserEmail').value = email;
        document.getElementById('editUserPhone').value = phone || '';
        
        new bootstrap.Modal(document.getElementById('editUserModal')).show();
    }

    document.getElementById('editUserForm').addEventListener('submit', function(e) {
        e.preventDefault();
        
        const userData = {
            id: document.getElementById('editUserId').value,
            fullName: document.getElementById('editUserFullName').value,
            email: document.getElementById('editUserEmail').value,
            phoneNumber: document.getElementById('editUserPhone').value
        };
        
        fetch('/Admin/UpdateUser', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(userData)
        })
        .then(response => {
            if (response.ok) {
                location.reload();
            } else {
                alert('حدث خطأ أثناء تحديث المستخدم');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('حدث خطأ أثناء تحديث المستخدم');
        });
    });

    // عرض تفاصيل المستخدم
    function viewUserDetails(userId) {
        fetch(`/Admin/UserDetails/${userId}`)
            .then(response => response.text())
            .then(html => {
                document.getElementById('userDetailsContent').innerHTML = html;
                new bootstrap.Modal(document.getElementById('userDetailsModal')).show();
            })
            .catch(error => {
                console.error('Error:', error);
                alert('حدث خطأ أثناء تحميل تفاصيل المستخدم');
            });
    }

    // حظر/إلغاء حظر المستخدم
    function lockUser(userId) {
        if (confirm('هل أنت متأكد من حظر هذا المستخدم؟')) {
            updateUserLockStatus(userId, true);
        }
    }

    function unlockUser(userId) {
        if (confirm('هل أنت متأكد من إلغاء حظر هذا المستخدم؟')) {
            updateUserLockStatus(userId, false);
        }
    }

    function updateUserLockStatus(userId, isLocked) {
        fetch('/Admin/UpdateUserLockStatus', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ userId: userId, isLocked: isLocked })
        })
        .then(response => {
            if (response.ok) {
                location.reload();
            } else {
                alert('حدث خطأ أثناء تحديث حالة المستخدم');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('حدث خطأ أثناء تحديث حالة المستخدم');
        });
    }

    // حذف مستخدم
    function deleteUser(userId, userName) {
        if (confirm(`هل أنت متأكد من حذف المستخدم "${userName}"؟ هذا الإجراء لا يمكن التراجع عنه.`)) {
            fetch(`/Admin/DeleteUser/${userId}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json',
                }
            })
            .then(response => {
                if (response.ok) {
                    location.reload();
                } else {
                    alert('حدث خطأ أثناء حذف المستخدم');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('حدث خطأ أثناء حذف المستخدم');
            });
        }
    }

    // تغيير دور المستخدم
    function changeUserRole(userId) {
        const newRole = prompt('أدخل الدور الجديد (Admin أو User):');
        if (newRole && (newRole === 'Admin' || newRole === 'User')) {
            fetch('/Admin/ChangeUserRole', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ userId: userId, role: newRole })
            })
            .then(response => {
                if (response.ok) {
                    location.reload();
                } else {
                    alert('حدث خطأ أثناء تغيير دور المستخدم');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('حدث خطأ أثناء تغيير دور المستخدم');
            });
        }
    }

    // إعادة تعيين كلمة المرور
    function resetPassword(userId) {
        if (confirm('هل أنت متأكد من إعادة تعيين كلمة مرور هذا المستخدم؟')) {
            fetch('/Admin/ResetPassword', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ userId: userId })
            })
            .then(response => {
                if (response.ok) {
                    alert('تم إرسال رابط إعادة تعيين كلمة المرور إلى البريد الإلكتروني للمستخدم');
                } else {
                    alert('حدث خطأ أثناء إعادة تعيين كلمة المرور');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('حدث خطأ أثناء إعادة تعيين كلمة المرور');
            });
        }
    }

    // تصدير البيانات
    function exportUsers() {
        window.location.href = '/Admin/ExportUsers';
    }
</script>
}
